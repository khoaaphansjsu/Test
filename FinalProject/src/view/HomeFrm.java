/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerImp;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import javax.swing.JButton;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.LayoutStyle.ComponentPlacement;

import model.MatHang;
import model.Pair;
import model.KhachHang;
import model.HoaDon;
import javax.swing.DefaultComboBoxModel;
import java.awt.Font;

/**
 *
 * @author ADMIN
 */
public class HomeFrm extends javax.swing.JFrame implements View {

	private List<MatHang> items;
	private DefaultTableModel modelMatHang;

	private List<MatHang> items1;
	private DefaultTableModel modelMatHang1;

	private List<KhachHang> customers;
	private DefaultTableModel modelKhachHang;

	private List<KhachHang> customers1;
	private DefaultTableModel modelKhachHang1;

	private List<HoaDon> bills;
	private DefaultTableModel modelHoaDon;

	private controller.Controller controller;

	public HomeFrm() {
		initComponents();
		items = new ArrayList<>();
		modelMatHang = (DefaultTableModel) tblMatHang.getModel();

		items1 = new ArrayList<>();
		modelMatHang1 = (DefaultTableModel) tblMH.getModel();

		customers = new ArrayList<>();
		modelKhachHang = (DefaultTableModel) tblKhachHang.getModel();

		customers1 = new ArrayList<>();
		modelKhachHang1 = (DefaultTableModel) tblKH.getModel();

		bills = new ArrayList<>();
		modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();

		controller = new ControllerImp();

		loadMH();
		loadKH();
		loadHD();
		showCustomer();
		showItems();
	}

	public List<MatHang> getItems() {
		return items;
	}

	public List<KhachHang> getCustomers() {
		return customers;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jTabbedPane1 = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblMatHang = new javax.swing.JTable();
		tblMatHang.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jLabel1 = new javax.swing.JLabel();
		jLabel1.setFont(new Font("Tahoma", Font.BOLD, 13));
		jLabel2 = new javax.swing.JLabel();
		jLabel2.setFont(new Font("Tahoma", Font.BOLD, 13));
		jLabel3 = new javax.swing.JLabel();
		jLabel3.setFont(new Font("Tahoma", Font.BOLD, 13));
		txtTenMH = new javax.swing.JTextField();
		txtGia = new javax.swing.JTextField();
		comboNhomHang = new javax.swing.JComboBox<>();
		btnThemMH = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		tblMatHang.setModel(new DefaultTableModel(new Object[][] { { null, null, null, null }, },
				new String[] { "ID", "Product's Name", "Type", "Price" }));
		jScrollPane1.setViewportView(tblMatHang);

		jLabel1.setText("Product's Name");

		jLabel2.setText("Price");

		jLabel3.setText("Type");

		comboNhomHang.setModel(new DefaultComboBoxModel(
				new String[] { "T-Shirt", "Shirt", "Jeans", "Shoes", "Jacket", "Hoodie", "" }));

		btnThemMH.setText("Add");
		btnThemMH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemMHActionPerformed(evt);
			}
		});

		JButton btnXoa = new JButton("Delete");
		btnXoa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int removeIndex = tblMatHang.getSelectedRow();
				if (removeIndex != -1) {
					items.remove(removeIndex);

					showData(items, modelMatHang);
					controller.writeToFile(items, "MH.txt");
				} else {

					JOptionPane.showMessageDialog(rootPane, "Please choose one subject");

				}

			}
		});

		JLabel lblSapXep = new JLabel("Sort");
		lblSapXep.setFont(new Font("Tahoma", Font.BOLD, 13));

		JComboBox comboSort = new JComboBox();
		comboSort.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				int index = comboSort.getSelectedIndex();
				if (index == 0) {
					Collections.sort(items, new Comparator<MatHang>() {

						@Override
						public int compare(MatHang o1, MatHang o2) {
							return o1.getName().compareTo(o2.getName());
						}
					});
				} else if (index == 1) {
					controller.sortByPrice(items);
				}
				showData(items, modelMatHang);
			}
		});
		comboSort.setModel(new DefaultComboBoxModel(new String[] { "Product's Name", "Price" }));
		
		JLabel lblId = new JLabel("ID");
		lblId.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		JLabel lblName = new JLabel("Name");
		lblName.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		JLabel lblType = new JLabel("Type");
		lblType.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		JLabel lblPrice = new JLabel("Price");
		lblPrice.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		textField = new JTextField();
		textField.setEnabled(false);
		textField.setColumns(10);
		
		textField_1 = new JTextField();
		textField_1.setColumns(10);
		
		textField_2 = new JTextField();
		textField_2.setEnabled(false);
		textField_2.setColumns(10);
		
		textField_3 = new JTextField();
		textField_3.setEnabled(false);
		textField_3.setColumns(10);
		
		JButton btnNewButton_2 = new JButton("Search");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String Name = textField_1.getText();
				int count=0;
				int find=0;
				for(MatHang product: items) {
					if(Name.matches(product.getName())) {
						
						textField.setText("" + items.get(count).getId());	
						textField_2.setText("" + items.get(count).getType());	
						textField_3.setText("" + items.get(count).getPrice());	
						find=4;
					}count++;
				
				}if(find!=4) {
					JOptionPane.showMessageDialog(rootPane, "Do not have that information");
					textField_1.setText("");
				}
				
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 1464, Short.MAX_VALUE)
					.addContainerGap())
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addGap(69)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jLabel1)
						.addComponent(jLabel2)
						.addComponent(jLabel3)
						.addComponent(lblSapXep, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE))
					.addGap(38)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING, false)
						.addComponent(comboSort, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(txtTenMH)
						.addComponent(txtGia)
						.addComponent(comboNhomHang, 0, 247, Short.MAX_VALUE))
					.addGap(93)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
						.addComponent(btnThemMH, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(btnXoa, GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
					.addGap(261)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblId, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
						.addComponent(lblName, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
						.addComponent(lblType)
						.addComponent(lblPrice))
					.addGap(86)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addComponent(textField_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
							.addComponent(btnNewButton_2, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
							.addGap(95))
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
								.addComponent(textField_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(textField_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addContainerGap(0, Short.MAX_VALUE))))
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 249, GroupLayout.PREFERRED_SIZE)
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addGap(33)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel1)
								.addComponent(txtTenMH, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(20)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(txtGia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnThemMH)
								.addComponent(lblId)
								.addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(22)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel3)
								.addComponent(comboNhomHang, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnXoa)
								.addComponent(lblName)
								.addComponent(textField_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(18)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(lblType)
								.addComponent(textField_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(5)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
								.addComponent(lblSapXep)
								.addComponent(comboSort, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(10)
							.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(lblPrice)
								.addComponent(textField_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addGap(145)
							.addComponent(btnNewButton_2)))
					.addContainerGap(138, Short.MAX_VALUE))
		);
		jPanel1.setLayout(jPanel1Layout);

		jTabbedPane1.addTab("Product Manager", jPanel1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1));
		jPanel2 = new javax.swing.JPanel();

		JScrollPane jScrollPane1_1 = new JScrollPane();

		txtTenKH = new JTextField();

		JLabel jLabel1_1 = new JLabel();
		jLabel1_1.setFont(new Font("Tahoma", Font.BOLD, 13));
		jLabel1_1.setText("Customer's Name");

		JLabel lblPhone = new JLabel();
		lblPhone.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblPhone.setText("Phone Number");

		txtPhone = new JTextField();

		JButton btnThemMH_1 = new JButton();
		btnThemMH_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				String tenKH = txtTenKH.getText();
				String phone = txtPhone.getText();
				String diaChi = txtDiaChi.getText();
				String mail = txtEmail.getText();
				int count = 0;
				if (tenKH.length() > 0 && phone.length() > 0 && diaChi.length() > 0 && mail.length() > 0) {
					if (tenKH.matches("[A-Za-z].*?")) {

						if (phone.matches("\\d+")) {
							for (KhachHang customer : customers) {
								if (tenKH.matches(customer.getName())) {
									JOptionPane.showMessageDialog(rootPane, "Ten khong the trung nhau");
									count = 5;
								}
								if (mail.matches(customer.getEmail())) {
									JOptionPane.showMessageDialog(rootPane, "Ten khong the trung nhau");
									count = 3;
								}
							}
							if (count == 0) {
								KhachHang h = new KhachHang(tenKH, diaChi, mail, phone);
								customers.add(h);
								showData(customers, modelKhachHang);
								controller.writeToFile(customers, "KH.txt");
							}
						} else {
							JOptionPane.showMessageDialog(rootPane, "So dien thoai chi la so!");
						}
					} else {
						JOptionPane.showMessageDialog(rootPane, "O trong chi la chu!");
					}

				} else {
					JOptionPane.showMessageDialog(rootPane, "Thong tin khong duoc bo trong!");
				}
				txtTenKH.setText("");
				txtPhone.setText("");
				txtDiaChi.setText("");
				txtEmail.setText("");

			}
		});
		btnThemMH_1.setText("Add");

		JButton btnXoa_1 = new JButton("Delete");

		btnXoa_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				int removeIndex = tblKhachHang.getSelectedRow();
				if (removeIndex != -1) {
					customers.remove(removeIndex);
					showData(customers, modelKhachHang);
					controller.writeToFile(customers, "KH.txt");
				} else {
					JOptionPane.showMessageDialog(rootPane, "Please choose one subject");
				}
			}
		});

		JLabel lblNewLabel = new JLabel("Address");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 13));

		txtDiaChi = new JTextField();
		txtDiaChi.setColumns(10);

		lblNewLabel_1 = new JLabel("Email");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD, 13));

		txtEmail = new JTextField();
		txtEmail.setColumns(10);

		comboSortKH = new JComboBox();
		comboSortKH.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int index = comboSortKH.getSelectedIndex();
				if (index == 0) {
					Collections.sort(customers1, new Comparator<KhachHang>() {

						@Override
						public int compare(KhachHang o1, KhachHang o2) {
							return o1.getName().compareTo(o2.getName());
						}
					});
				}
				showData(customers1, modelKhachHang);

			}
		});
		comboSortKH.setModel(new DefaultComboBoxModel(new String[] {"Name"}));

		lblSapXep_1 = new JLabel("Sort By");
		lblSapXep_1.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		lblId_1 = new JLabel("ID");
		lblId_1.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		textField_4 = new JTextField();
		textField_4.setEnabled(false);
		textField_4.setColumns(10);
		
		lblCustomersName = new JLabel("Customer's Name");
		lblCustomersName.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		textField_5 = new JTextField();
		textField_5.setColumns(10);
		
		lblPhoneNumber = new JLabel("Phone Number");
		lblPhoneNumber.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		textField_6 = new JTextField();
		textField_6.setEnabled(false);
		textField_6.setColumns(10);
		
		textField_7 = new JTextField();
		textField_7.setEnabled(false);
		textField_7.setColumns(10);
		
		lblAddress = new JLabel("Address");
		lblAddress.setFont(new Font("Tahoma", Font.BOLD, 13));
		
		btnNewButton_3 = new JButton("Search");
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String Name = textField_5.getText();
				int count=0;
				int find=0;
				for(KhachHang customer: customers) {
					if(Name.matches(customer.getName())) {
						
						textField_4.setText("" + customers.get(count).getId());	
						textField_6.setText("" + customers.get(count).getPhoneNum());	
						textField_7.setText("" + customers.get(count).getAddress());
						textField_8.setText("" + customers.get(count).getEmail());
						
						find=4;
					}count++;
				
				}if(find!=4) {
					JOptionPane.showMessageDialog(rootPane, "Do not have that information");
					textField_5.setText("");
				}
			}
		});
		
		textField_8 = new JTextField();
		textField_8.setEnabled(false);
		textField_8.setColumns(10);
		
		lblNewLabel_2 = new JLabel("Email");
		lblNewLabel_2.setFont(new Font("Tahoma", Font.BOLD, 13));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2Layout.setHorizontalGroup(
			jPanel2Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addGap(29)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
									.addComponent(jLabel1_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
									.addComponent(lblPhone, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
									.addComponent(lblNewLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
									.addComponent(lblNewLabel_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addComponent(lblSapXep_1, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE))
							.addGap(120)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addComponent(txtTenKH, GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
									.addGap(383))
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
										.addComponent(txtEmail, GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
										.addComponent(txtDiaChi, GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
										.addComponent(txtPhone, GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
										.addComponent(comboSortKH, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 247, GroupLayout.PREFERRED_SIZE))
									.addGap(105)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(btnThemMH_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(btnXoa_1, GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
									.addGap(170)))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
										.addComponent(lblId_1, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
										.addGroup(jPanel2Layout.createSequentialGroup()
											.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(lblCustomersName, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE)
												.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING, false)
													.addComponent(lblAddress, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
													.addComponent(lblPhoneNumber, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
												.addComponent(lblNewLabel_2))
											.addGap(86)
											.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(textField_5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(textField_8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(textField_7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(textField_6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(textField_4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
									.addGap(154))
								.addComponent(btnNewButton_3, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)))
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addContainerGap()
							.addComponent(jScrollPane1_1, GroupLayout.DEFAULT_SIZE, 1452, Short.MAX_VALUE)))
					.addContainerGap())
		);
		jPanel2Layout.setVerticalGroup(
			jPanel2Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addComponent(jScrollPane1_1, GroupLayout.PREFERRED_SIZE, 249, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addGap(33)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(txtTenKH, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel1_1))
							.addGap(21)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(txtPhone, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnThemMH_1)
								.addComponent(lblPhone))
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
										.addGroup(jPanel2Layout.createSequentialGroup()
											.addGap(20)
											.addComponent(txtDiaChi, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addGroup(jPanel2Layout.createSequentialGroup()
											.addGap(13)
											.addComponent(lblNewLabel)))
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
										.addComponent(lblNewLabel_1))
									.addGap(34)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(comboSortKH, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
										.addComponent(lblSapXep_1)))
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGap(31)
									.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(btnXoa_1)
										.addComponent(btnNewButton_3)))))
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addGap(52)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(lblId_1)
								.addComponent(textField_4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(31)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(lblCustomersName)
								.addComponent(textField_5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(10)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGap(20)
									.addComponent(textField_6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel2Layout.createSequentialGroup()
									.addGap(23)
									.addComponent(lblPhoneNumber)))
							.addGap(18)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(textField_7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblAddress))
							.addGap(18)
							.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(textField_8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblNewLabel_2)))))
		);

		tblKhachHang = new JTable();
		tblKhachHang.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, "", null},
			},
			new String[] {
				"ID", "Customer's Name", "Phone Number", "Address", "Email"
			}
		));
		jScrollPane1_1.setViewportView(tblKhachHang);
		jPanel2.setLayout(jPanel2Layout);

		jTabbedPane1.addTab("Customer Manager", jPanel2);

		panel = new JPanel();
		jTabbedPane1.addTab("Bill Manager", null, panel, null);
		panel.setLayout(null);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(579, 13, 885, 325);
		panel.add(scrollPane);

		tblHoaDon = new JTable();
		tblHoaDon.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null, null, null, null},
			},
			new String[] {
				"Date", "Product's ID", "Product's Name", "Customer's ID", "Customer's Name", "Price", "Quantity", "Total Price"
			}
		));
		scrollPane.setViewportView(tblHoaDon);

		JButton btnNewButton = new JButton("Add");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				int KHIndex = tblKH.getSelectedRow();
				int MHIndex = tblMH.getSelectedRow();
				String check = txtSL.getText();

				int day = Integer.parseInt(txtDate.getText());
				int month = Integer.parseInt(txtMonth.getText());
				int year = Integer.parseInt(txtYear.getText());

				String date = day + "/" + month + "/" + year;

				int count = 0;

				if (check.length() > 0 && date.length() > 0) {
					if (month <= 12) {
						if ((month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10
								|| month == 12) && day > 0 && day < 32) {
							count = 5;

						} else if ((month == 4 || month == 6 || month == 9 || month == 11) && day > 0 && day < 31) {
							count = 5;
						} else if (month == 2 && year % 4 == 0 && day > 0 && day < 30) {

							count = 5;

						} else if ((month == 2 && year % 4 != 0 && day > 0 && day < 29)) {
							count = 5;
						} else {
							JOptionPane.showMessageDialog(rootPane, "Ngay bi sai");
							count = 2;
						}

					} else {
						JOptionPane.showMessageDialog(rootPane, "Thang bi sai");
						count = 2;

					}

					if (count == 5) {

						int quantities = Integer.parseInt(txtSL.getText());

						if (KHIndex == -1 || MHIndex == -1) {
							JOptionPane.showMessageDialog(rootPane, "Hay chon khach hang hoac mat hang");

						} else {
							KhachHang khachHang = customers1.get(KHIndex);
							MatHang matHang = items1.get(MHIndex);

							HoaDon m = new HoaDon(khachHang, matHang, quantities, date);
							bills.add(m);

							showData(bills, modelHoaDon);
							controller.writeToFile(bills, "HD.txt");
						}
					}
				} else {
					JOptionPane.showMessageDialog(rootPane, "Hay nhap du khung");
				}
				txtSL.setText("");

			}

		});
		btnNewButton.setBounds(1071, 390, 97, 25);
		panel.add(btnNewButton);

		JButton btnNewButton_1 = new JButton("Delete");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				int removeIndex = tblHoaDon.getSelectedRow();
				if (removeIndex != -1) {
					bills.remove(removeIndex);
					showData(bills, modelHoaDon);
					controller.writeToFile(bills, "HD.txt");
				} else {
					JOptionPane.showMessageDialog(rootPane, "Please choose one subject");
				}

			}
		});
		btnNewButton_1.setBounds(1071, 459, 97, 25);
		panel.add(btnNewButton_1);

		jScrollPane1_2 = new JScrollPane();
		jScrollPane1_2.setBounds(12, 13, 234, 325);
		panel.add(jScrollPane1_2);

		tblKH = new JTable();
		tblKH.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"ID", "Customer's Name"
			}
		));
		jScrollPane1_2.setViewportView(tblKH);

		jScrollPane1_3 = new JScrollPane();
		jScrollPane1_3.setBounds(258, 13, 309, 325);
		panel.add(jScrollPane1_3);

		tblMH = new JTable();
		tblMH.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null},
			},
			new String[] {
				"ID", "Product's Name", "Price"
			}
		));
		jScrollPane1_3.setViewportView(tblMH);

		jLabel5 = new JLabel();
		jLabel5.setFont(new Font("Tahoma", Font.BOLD, 13));
		jLabel5.setText("Quantity");
		jLabel5.setBounds(698, 394, 67, 16);
		panel.add(jLabel5);

		txtSL = new JTextField();
		txtSL.setColumns(10);
		txtSL.setBounds(844, 391, 116, 22);
		panel.add(txtSL);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				customers1.clear();
				showCustomer();

			}
		});
		btnRefresh.setBounds(55, 351, 97, 25);
		panel.add(btnRefresh);

		btnRefresh_1 = new JButton("Refresh");
		btnRefresh_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				items1.clear();
				showItems();

			}
		});
		btnRefresh_1.setBounds(314, 356, 97, 25);
		panel.add(btnRefresh_1);

		lblDay = new JLabel("Date(dd/mm/yyyy)");
		lblDay.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblDay.setBounds(698, 459, 134, 16);
		panel.add(lblDay);

		txtDate = new JTextField();
		txtDate.setBounds(844, 456, 41, 22);
		panel.add(txtDate);
		txtDate.setColumns(10);

		txtMonth = new JTextField();
		txtMonth.setBounds(897, 456, 41, 22);
		panel.add(txtMonth);
		txtMonth.setColumns(10);

		txtYear = new JTextField();
		txtYear.setBounds(948, 456, 55, 22);
		panel.add(txtYear);
		txtYear.setColumns(10);
		
		JComboBox comboSortHD = new JComboBox();
		comboSortHD.setModel(new DefaultComboBoxModel(new String[] {"Date", "Product's Name", "Customer's Name", "Total"}));
		comboSortHD.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int index = comboSortHD.getSelectedIndex();
				if (index == 0) {
					Collections.sort(bills, new Comparator<HoaDon>() {
						@Override
						public int compare(HoaDon o1, HoaDon o2) {
							// TODO Auto-generated method stub
							return o1.getDate().compareTo(o2.getDate());
						}
					});
				}
				else if (index == 1) {
					Collections.sort(bills, new Comparator<HoaDon>() {
						@Override
						public int compare(HoaDon o1, HoaDon o2) {
							// TODO Auto-generated method stub
							return o1.getItem().getName().compareTo(o2.getItem().getName());
						}
					});
				}else if (index == 2) {
					Collections.sort(bills, new Comparator<HoaDon>() {
						@Override
						public int compare(HoaDon o1, HoaDon o2) {
							// TODO Auto-generated method stub
							return o1.getCustomer().getName().compareTo(o2.getCustomer().getName());
						}
					});
				}else if (index == 3) {
					controller.sortByPrice(bills);
				}
				
				showData(bills, modelHoaDon);
				
				
				
			}
		});
		comboSortHD.setBounds(844, 534, 247, 22);
		panel.add(comboSortHD);
		
		JLabel lblSapXep_1_1 = new JLabel("Sort By");
		lblSapXep_1_1.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblSapXep_1_1.setBounds(698, 537, 63, 16);
		panel.add(lblSapXep_1_1);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnThemMHActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemMHActionPerformed
		// TODO add your handling code here:
		String tenMH = txtTenMH.getText();
		String gia = txtGia.getText();
		String nhomMH = comboNhomHang.getSelectedItem().toString();
		int count = 0;
		if (tenMH.length() > 0 && gia.length() > 0) {
			if (tenMH.matches("[A-Za-z].*?")) {
				if (gia.matches("^([+-]?\\d*\\.?\\d*)$")/* ("\\d+") */) {

					for (MatHang product : items) {
						if (tenMH.matches(product.getName())) {
							JOptionPane.showMessageDialog(rootPane, "Ten khong the trung nhau");
							count = 5;
						}
					}
					if (count == 0) {
						// gia ban hop le
						float giaBan = Float.parseFloat(gia);
						MatHang m = new MatHang(giaBan, nhomMH, tenMH);
						items.add(m);
						this.showData(items, modelMatHang);
						controller.writeToFile(items, "MH.txt");
					}
				} else {
					JOptionPane.showMessageDialog(rootPane, "Gia ban chi co the la so!");
				}
			} else {
				JOptionPane.showMessageDialog(rootPane, "Ten mat hang chi co the la chu!");
			}
		} else {
			JOptionPane.showMessageDialog(rootPane, "Thong tin khong duoc bo trong!");
		}
		txtTenMH.setText("");
		txtGia.setText("");
	}// GEN-LAST:event_btnThemMHActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new HomeFrm().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThemMH;
	private javax.swing.JComboBox<String> comboNhomHang;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JTable tblMatHang;
	private javax.swing.JTextField txtGia;
	private javax.swing.JTextField txtTenMH;
	private JTextField txtTenKH;
	private JTextField txtPhone;
	private JTable tblKhachHang;
	private JTextField txtDiaChi;
	private JLabel lblNewLabel_1;
	private JTextField txtEmail;
	private JPanel panel;
	private JScrollPane scrollPane;
	private JTable tblHoaDon;
	private JScrollPane jScrollPane1_2;
	private JTable tblKH;
	private JScrollPane jScrollPane1_3;
	private JTable tblMH;
	private JLabel jLabel5;
	private JTextField txtSL;
	private JComboBox comboSortKH;
	private JLabel lblSapXep_1;
	private JButton btnRefresh;
	private JButton btnRefresh_1;
	private JLabel lblDay;
	private JTextField txtDate;
	private JTextField txtMonth;
	private JTextField txtYear;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTextField textField_3;
	private JLabel lblId_1;
	private JTextField textField_4;
	private JLabel lblCustomersName;
	private JTextField textField_5;
	private JLabel lblPhoneNumber;
	private JTextField textField_6;
	private JTextField textField_7;
	private JLabel lblAddress;
	private JButton btnNewButton_3;
	private JTextField textField_8;
	private JLabel lblNewLabel_2;
	// End of variables declaration//GEN-END:variables

	@Override
	public <T> void showData(List<T> data, DefaultTableModel model) {
		model.setRowCount(0);
		for (T t : data) {
			if (t instanceof MatHang) {
				model.addRow(new Object[] { ((MatHang) t).getId(), ((MatHang) t).getName(), ((MatHang) t).getType(),
						((MatHang) t).getPrice() });
			}
			if (t instanceof KhachHang) {
				model.addRow(new Object[] { ((KhachHang) t).getId(), ((KhachHang) t).getName(),
						((KhachHang) t).getPhoneNum(), ((KhachHang) t).getAddress(), ((KhachHang) t).getEmail() });
			}
			if (t instanceof HoaDon) {
				HoaDon h = (HoaDon) t;
				/*
				 * for (Pair<MatHang, Integer> pair : h.getPairs()) { model.addRow(new Object[]{
				 * h.getCustomer().getId(),h.getCustomer().getName(),
				 * pair.getMatHang().getId(),pair.getMatHang().getName(),pair.getMatHang().
				 * getPrice(), pair.getSoLuong(),h.getTotalPrice() }); }
				 */
				model.addRow(new Object[] { h.getDate(), h.getCustomer().getId(), h.getCustomer().getName(),
						h.getItem().getId(), h.getItem().getName(), h.getItem().getPrice(), h.getSoLuong(),
						h.getTotalPrice() });
			}
		}
	}

	private void loadMH() {
		items.addAll(controller.readDataFromFile("MH.txt"));
		this.showData(items, modelMatHang);
		if (items.size() > 0) {
			MatHang.setsId(items.get(items.size() - 1).getId() + 1);
		}
	}

	private void loadKH() {
		customers.addAll(controller.readDataFromFile("KH.txt"));
		this.showData(customers, modelKhachHang);
		if (customers.size() > 0) {
			KhachHang.setsId(items.get(items.size() - 1).getId() + 1);
		}

	}

	private void loadHD() {
		bills.addAll(controller.readDataFromFile("HD.txt"));
		this.showData(bills, modelHoaDon);
		if (bills.size() > 0) {
			HoaDon.setsId(bills.get(bills.size() - 1).getId() + 1);
		}
	}

	private void showCustomer() {
		customers1.addAll(controller.readDataFromFile("KH.txt"));
		modelKhachHang1.setRowCount(0);
		for (KhachHang khachHang : customers1) {
			modelKhachHang1.addRow(new Object[] { khachHang.getId(), khachHang.getName() });

		}

	}

	private void showItems() {
		items1.addAll(controller.readDataFromFile("MH.txt"));
		modelMatHang1.setRowCount(0);
		for (MatHang matHang : items1) {
			modelMatHang1.addRow(new Object[] { matHang.getId(), matHang.getName(), matHang.getPrice()

			});

		}

	}
}
